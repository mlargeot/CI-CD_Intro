name: chocolatine
on: 
  push:
    branches-ignore:
      - ga-ignore-*
  pull_request:
    branches-ignore:
      - ga-ignore-*

env:
  MIRROR_URL: git@github.com:EpitechPromo2027/B-DOP-200-REN-2-1-chocolatine-morgan.largeot.git
  EXECUTABLES: test

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
      - run: check.sh $(pwd) $(pwd)
      - run: |
          if [ ! -s "coding-style-report.log" ]; then
            echo ""
          else
            while read ERROR
            do
              $FILE = "echo $ERROR | cut -d : -f 1"
              $LINE = "echo $ERROR | cut -d : -f 2"
              $TYPE = "echo $ERROR | cut -d : -f 3"
              $ERR = "echo $ERROR | cut -d : -f 4"
              echo ::error file=$FILE,line=$LINE,title=$TYPE coding style error::$ERR 
            done < "coding-style-report.log"
            exit 1
          fi

  check_program_compilation:
    runs-on: ubuntu_latest
    container: epitechcontent/epitest-docker
    needs: check_coding_style
    steps:
      - uses: actions/checkout@v3
      - run: make
        timeout-minutes: 2
      - run: make clean
      - run: |
          for exec in $(echo "${{ env.EXECUTABLES }}" | tr ',' ' ')
          do
            if [ ! -f $exec ] || [ ! -x $exec ]
            then; exit 1; fi
          done

  run_tests:
    needs: check_program_compilation
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - run: make tests_run
        timeout-minutes: 2

  push_to_mirror:
    needs: run_tests
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}